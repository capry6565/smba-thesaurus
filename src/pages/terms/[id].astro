---
import fs from "fs";
import path from "path";
import parseRdf from "../../utils/parseRdf.js";
import Graph from "../../components/Graph.astro";
import Prism from "prismjs";
import "prismjs/components/prism-turtle.js";

export async function getStaticPaths() {
  const files = fs.readdirSync("./terms").filter(f => f.endsWith(".ttl"));
  return files.map(f => ({
    params: { id: f.replace(".ttl", "") },
  }));
}

const { id } = Astro.params;
const filePath = path.resolve(`./terms/${id}.ttl`);
const ttlText = fs.readFileSync(filePath, "utf8");

const { triples, nodes, edges } = parseRdf(ttlText);

const mainTerm = triples.find(t => 
  t.predicate.includes('prefLabel') || t.predicate.includes('label')
)?.object.replace(/@\w+$/, '') || id;

// –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ properties –∏ metadata
const metadataPredicates = ['dct:source', 'dct:creator', 'dct:created', 'dct:modified'];
const properties = [];
const metadata = [];

const attributeMap = new Map();
triples.forEach(triple => {
  const attr = triple.predicate;
  if (!attributeMap.has(attr)) {
    attributeMap.set(attr, []);
  }
  attributeMap.get(attr).push(triple.object);
});

Array.from(attributeMap.entries()).forEach(([attr, values]) => {
  const item = {
    attribute: attr,
    value: values.length > 1 ? values.join(', ') : values[0]
  };
  
  if (metadataPredicates.some(mp => attr.includes(mp))) {
    metadata.push(item);
  } else {
    properties.push(item);
  }
});
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{mainTerm} | SMBA Thesaurus</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css">
</head>
<body>
  <div class="container">
    <header>
      <h1>üìò SMBA Thesaurus</h1>
      <a href="/">‚Üê Back to index</a>
    </header>

    <div class="term-header">
      <h2>{mainTerm}</h2>
    </div>

    <div class="term-layout">
      <div class="left-column">
        <section class="triples-section">
          <h3>üîó RDF Properties</h3>
          <div class="table-wrapper">
            <table>
              <thead>
                <tr>
                  <th>Attribute</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                {properties.map(prop => (
                  <tr>
                    <td>{prop.attribute}</td>
                    <td class="value-cell">{prop.value}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </section>

        {metadata.length > 0 && (
          <section class="metadata-section">
            <h3>üìã Metadata</h3>
            <div class="metadata-list">
              {metadata.map(meta => (
                <div class="metadata-item">
                  <span class="metadata-label">
                    {meta.attribute.includes('source') && 'üîó'}
                    {meta.attribute.includes('creator') && 'üë§'}
                    {meta.attribute.includes('created') && 'üìÖ'}
                    {meta.attribute.includes('modified') && 'üîÑ'}
                    {' '}{meta.attribute}:
                  </span>
                  <span class="metadata-value">
                    {meta.attribute.includes('source') && meta.value.startsWith('http') ? (
                      <a href={meta.value} target="_blank" rel="noopener">{meta.value}</a>
                    ) : (
                      meta.value
                    )}
                  </span>
                </div>
              ))}
            </div>
          </section>
        )}
      </div>

      <div class="right-column">
        <section class="graph-section">
          <h3>üï∏Ô∏è Visual Graph</h3>
          <Graph nodes={nodes} edges={edges} />
        </section>

        <section class="code-section">
          <h3>üìù RDF Source</h3>
          <div class="code-wrapper">
            <pre><code class="language-turtle" set:html={Prism.highlight(ttlText, Prism.languages.turtle, "turtle")}></code></pre>
          </div>
        </section>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-turtle.min.js"></script>
</body>
</html>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    background: #f5f5f5;
    color: #333;
    line-height: 1.6;
  }

  .container {
    max-width: 98%;
    margin: 0 auto;
    padding: 1.5rem;
  }

  @media (min-width: 1920px) {
    .container {
      max-width: 1900px;
    }
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #ddd;
  }

  header h1 {
    font-size: 1.8rem;
    color: #2B7CE9;
  }

  header a {
    color: #2B7CE9;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s;
  }

  header a:hover {
    text-decoration: underline;
  }

  .term-header {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    margin-bottom: 2rem;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .term-header h2 {
    color: #2B7CE9;
    font-size: 2rem;
  }

  .term-layout {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }

  .left-column {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .right-column {
    flex: 1;
    min-width: 0;
    display: grid;
    grid-template-rows: 600px auto;
    gap: 2rem;
  }

  section {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    display: flex;
    flex-direction: column;
  }

  section h3 {
    margin-bottom: 1rem;
    color: #555;
    font-size: 1.2rem;
    flex-shrink: 0;
  }

  .triples-section {
    max-height: 500px;
    overflow-y: auto;
  }

  .table-wrapper {
    overflow-x: auto;
    flex: 1;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  th, td {
    text-align: left;
    padding: 0.75rem;
    border-bottom: 1px solid #eee;
  }

  th {
    background: #f8f9fa;
    font-weight: 600;
    color: #555;
    position: sticky;
    top: 0;
    z-index: 1;
  }

  tbody tr:nth-child(even) {
    background: #f8f9fa;
  }

  tbody tr:hover {
    background: #e3f2fd;
  }

  td {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    font-size: 0.95rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  .metadata-section {
    background: #f8f9fa;
    border-left: 4px solid #2B7CE9;
  }

  .metadata-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .metadata-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .metadata-label {
    font-weight: 600;
    color: #555;
    font-size: 0.9rem;
  }

  .metadata-value {
    color: #333;
    font-size: 0.95rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
    padding-left: 1.5rem;
  }

  .metadata-value a {
    color: #2B7CE9;
    text-decoration: none;
  }

  .metadata-value a:hover {
    text-decoration: underline;
  }

  .graph-section {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
  }

  .code-section {
    display: flex;
    flex-direction: column;
    min-height: 300px;
  }

  .code-wrapper {
    flex: 1;
    overflow: hidden;
    background: #2d2d2d;
    border-radius: 4px;
  }

  .code-wrapper pre {
    margin: 0;
    padding: 0;
    background: transparent;
    overflow-x: auto;
    max-height: 400px;
    overflow-y: auto;
  }

  .code-wrapper pre code {
    display: block;
    padding: 1rem;
    background: transparent;
    font-size: 0.9rem;
    line-height: 1.5;
    font-family: 'Courier New', monospace;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  @media (max-width: 1024px) {
    .term-layout {
      flex-direction: column;
    }

    .right-column {
      grid-template-rows: 500px auto;
    }

    .triples-section {
      max-height: 600px;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem;
      max-width: 100%;
    }

    header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .term-header h2 {
      font-size: 1.5rem;
    }

    section {
      padding: 1rem;
    }

    th, td {
      padding: 0.5rem;
      font-size: 0.85rem;
    }

    .triples-section {
      max-height: 400px;
    }

    .right-column {
      grid-template-rows: 400px auto;
    }
  }
</style>